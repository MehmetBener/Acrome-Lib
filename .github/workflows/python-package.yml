name: Build and Publish Python Package

on:
  release:
    types: [published]

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install build tools
        run: |
          pip install --upgrade build wheel

      - name: Run tests
        run: |
          if [ -f requirements-test.txt ]; then
            pip install -r requirements-test.txt
            pytest --maxfail=1 --disable-warnings -v
          else
            echo "No tests defined."
          fi

      - name: Build distributions
        run: python -m build --sdist --wheel

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.python-version }}
          path: dist/

  publish-to-pypi:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false

    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-3.11
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release-v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

